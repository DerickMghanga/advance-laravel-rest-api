openapi: 3.0.3
info:
  title: Livepost
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/comments:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/comments?page=1'
                    last: 'http://localhost/api/v1/comments?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/comments?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/comments'
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/comments?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/comments?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/comments?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/comments'
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Comment] 14'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Comment] 14'
      tags:
        - Endpoints
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 14
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Gets a list of posts.'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 20
            nullable: false
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 1
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 12
                      title: neque
                      body: []
                      created_at: '2025-02-15T12:06:57.000000Z'
                      updated_at: '2025-02-15T12:06:57.000000Z'
                    -
                      id: 13
                      title: tempore
                      body: []
                      created_at: '2025-02-15T12:06:57.000000Z'
                      updated_at: '2025-02-15T12:06:57.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 12
                        title: neque
                        body: []
                        created_at: '2025-02-15T12:06:57.000000Z'
                        updated_at: '2025-02-15T12:06:57.000000Z'
                      -
                        id: 13
                        title: tempore
                        body: []
                        created_at: '2025-02-15T12:06:57.000000Z'
                        updated_at: '2025-02-15T12:06:57.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 12
                        title:
                          type: string
                          example: neque
                        body:
                          type: array
                          example: []
                        created_at:
                          type: string
                          example: '2025-02-15T12:06:57.000000Z'
                        updated_at:
                          type: string
                          example: '2025-02-15T12:06:57.000000Z'
      tags:
        - 'Post Management'
      security: []
    post:
      summary: 'Store a newly created post in storage.'
      operationId: storeANewlyCreatedPostInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 15
                    title: sint
                    body: []
                    created_at: '2025-02-15T12:06:57.000000Z'
                    updated_at: '2025-02-15T12:06:57.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      title:
                        type: string
                        example: sint
                      body:
                        type: array
                        example: []
                      created_at:
                        type: string
                        example: '2025-02-15T12:06:57.000000Z'
                      updated_at:
                        type: string
                        example: '2025-02-15T12:06:57.000000Z'
      tags:
        - 'Post Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Title of the post.'
                  example: 'Amazing Post'
                  nullable: false
                body:
                  type: array
                  description: 'Body of the post.'
                  example:
                    - 'This post is super beautiful'
                  items:
                    type: string
                user_ids:
                  type: array
                  description: 'The author ids of the post.'
                  example:
                    - 1
                    - 2
                  items:
                    type: integer
              required:
                - title
                - body
                - user_ids
      security: []
  '/api/v1/posts/{id}':
    get:
      summary: 'Display the specified post.'
      operationId: displayTheSpecifiedPost
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 14
                    title: corrupti
                    body: []
                    created_at: '2025-02-15T12:06:57.000000Z'
                    updated_at: '2025-02-15T12:06:57.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      title:
                        type: string
                        example: corrupti
                      body:
                        type: array
                        example: []
                      created_at:
                        type: string
                        example: '2025-02-15T12:06:57.000000Z'
                      updated_at:
                        type: string
                        example: '2025-02-15T12:06:57.000000Z'
      tags:
        - 'Post Management'
      security: []
    patch:
      summary: 'Update the specified post in storage.'
      operationId: updateTheSpecifiedPostInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 16
                    title: maiores
                    body: []
                    created_at: '2025-02-15T12:06:57.000000Z'
                    updated_at: '2025-02-15T12:06:57.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      title:
                        type: string
                        example: maiores
                      body:
                        type: array
                        example: []
                      created_at:
                        type: string
                        example: '2025-02-15T12:06:57.000000Z'
                      updated_at:
                        type: string
                        example: '2025-02-15T12:06:57.000000Z'
      tags:
        - 'Post Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Title of the post.'
                  example: 'Amazing Post'
                  nullable: false
                body:
                  type: array
                  description: 'Body of the post.'
                  example:
                    - 'This post is super beautiful'
                  items:
                    type: string
                user_ids:
                  type: array
                  description: 'The author ids of the post.'
                  example:
                    - 1
                    - 2
                  items:
                    type: integer
              required:
                - title
                - body
                - user_ids
      security: []
    delete:
      summary: 'Remove the specified post from storage.'
      operationId: removeTheSpecifiedPostFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: success
                properties:
                  data:
                    type: string
                    example: success
      tags:
        - 'Post Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 5
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Gets a List of Users'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 20
            nullable: false
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 1
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 60
                      name: 'Prof. Andreanne Quigley DDS'
                      email: lambert42@example.net
                      created_at: '2025-02-15 12:06:58'
                      updated_at: '2025-02-15 12:06:58'
                    -
                      id: 61
                      name: 'Mr. Stone Reilly Jr.'
                      email: keaton57@example.org
                      created_at: '2025-02-15 12:06:58'
                      updated_at: '2025-02-15 12:06:58'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 60
                        name: 'Prof. Andreanne Quigley DDS'
                        email: lambert42@example.net
                        created_at: '2025-02-15 12:06:58'
                        updated_at: '2025-02-15 12:06:58'
                      -
                        id: 61
                        name: 'Mr. Stone Reilly Jr.'
                        email: keaton57@example.org
                        created_at: '2025-02-15 12:06:58'
                        updated_at: '2025-02-15 12:06:58'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 60
                        name:
                          type: string
                          example: 'Prof. Andreanne Quigley DDS'
                        email:
                          type: string
                          example: lambert42@example.net
                        created_at:
                          type: string
                          example: '2025-02-15 12:06:58'
                        updated_at:
                          type: string
                          example: '2025-02-15 12:06:58'
      tags:
        - 'User Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 63
                    name: 'Sydni Nolan'
                    email: hauck.lowell@example.net
                    created_at: '2025-02-15 12:06:58'
                    updated_at: '2025-02-15 12:06:58'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 63
                      name:
                        type: string
                        example: 'Sydni Nolan'
                      email:
                        type: string
                        example: hauck.lowell@example.net
                      created_at:
                        type: string
                        example: '2025-02-15 12:06:58'
                      updated_at:
                        type: string
                        example: '2025-02-15 12:06:58'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
                  nullable: false
              required:
                - name
                - email
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 62
                    name: 'Derek Labadie'
                    email: marielle.cummings@example.com
                    created_at: '2025-02-15 12:06:58'
                    updated_at: '2025-02-15 12:06:58'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 62
                      name:
                        type: string
                        example: 'Derek Labadie'
                      email:
                        type: string
                        example: marielle.cummings@example.com
                      created_at:
                        type: string
                        example: '2025-02-15 12:06:58'
                      updated_at:
                        type: string
                        example: '2025-02-15 12:06:58'
      tags:
        - 'User Management'
      security: []
    patch:
      summary: 'Update the specified user in storage.'
      operationId: updateTheSpecifiedUserInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 64
                    name: 'Eugene Parker II'
                    email: schmeler.letha@example.org
                    created_at: '2025-02-15 12:06:58'
                    updated_at: '2025-02-15 12:06:58'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      name:
                        type: string
                        example: 'Eugene Parker II'
                      email:
                        type: string
                        example: schmeler.letha@example.org
                      created_at:
                        type: string
                        example: '2025-02-15 12:06:58'
                      updated_at:
                        type: string
                        example: '2025-02-15 12:06:58'
      tags:
        - 'User Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
                  nullable: false
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: success
                properties:
                  data:
                    type: string
                    example: success
      tags:
        - 'User Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'User ID'
        example: 12
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Post Management'
    description: 'APIs to manage post.'
  -
    name: 'User Management'
    description: "\nAPIs to manage the user resource."
